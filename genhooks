#!/bin/sh

AS="${AS:-mips64-as}"
CPP="${CPP:-mips64-cpp}"
NM="${NM:-mips64-nm}"
OBJCOPY="${OBJCOPY:-mips64-objcopy}"

elf="$1"
if [ -z "$elf" ]; then
  echo 'usage: genhooks <elf-file>'
  exit 1
fi

z64_rc="$(mktemp)"
$CPP -dD $CPPFLAGS -imacros "src/gz/z64.h" </dev/null |
awk '(/^#define z64_[0-9A-Za-z_]*_addr/) {printf "%s=%s\n",$2,$3}' >"$z64_rc"
. "$z64_rc"
rm -f "$z64_rc"

gz_rc="$(mktemp)"
$NM "$elf" |
awk '(/^[0-9A-Za-z_ ]*$/) {printf "gzsym_%s=0x%s\n",$3,$1}' >"$gz_rc"
. "$gz_rc"
rm -f "$gz_rc"

asmgsc()
{
  addr="$(printf "%d" "$1")"
  objfile="$(mktemp)"
  binfile="$(mktemp)"
  echo ".data; .set noreorder; .set noat; $2" | $AS -o "$objfile"
  $OBJCOPY -j .data -O binary "$objfile" "$binfile"
  od -An -t x1 -v "$binfile" |
  awk 'BEGIN {RS=""; a='"$addr"'} {for (i=1; i<=NF; i++) {if (i<NF) {printf "%08x %s%s\n",a+16777216,$i,$(i+1); i++; a++} else printf "%08x 00%s",a,$i; a++}}'
  rm -f "$objfile" "$binfile"
}

asmgsc  "$z64_main_hook_addr"              "jal $gzsym__start;"
asmgsc  "$z64_entrance_offset_hook_addr"   "jal $gzsym_entrance_offset_hook; nop;"
asmgsc  "$z64_draw_room_1_call_addr"       "jal $gzsym_draw_room_hook;"
asmgsc  "$z64_draw_room_2_call_addr"       "jal $gzsym_draw_room_hook;"
asmgsc  "$z64_draw_actors_call_addr"       "jal $gzsym_draw_actors_hook;"
asmgsc  "$z64_srand_call_addr"             "jal $gzsym_srand_hook;"
asmgsc  "$z64_frame_input_call_addr"       "jal $gzsym_input_hook; nop;"
asmgsc  "$z64_ocarina_update_call_addr"    "jal $gzsym_ocarina_update_hook;"
asmgsc  "$z64_ocarina_input_call_addr"     "jal $gzsym_ocarina_input_hook;"
asmgsc  "$z64_ocarina_sync_hook_addr"      "jal $gzsym_ocarina_sync_hook; nop; b 0x000C; nop;"
asmgsc  "$z64_afx_rand_call_addr"          "jal $gzsym_afx_rand_hook;"
asmgsc  "$z64_room_load_sync_hook_addr"    "jal $gzsym_room_load_sync_hook;"
asmgsc  "$z64_camera_hook_addr"            "jal $gzsym_camera_hook;"
asmgsc  "$z64_minimap_disable_1_addr"      ".hword 0x5000;" # beql $zero, $zero
asmgsc  "$z64_minimap_disable_2_addr"      ".hword 0x5000;" # beql $zero, $zero
asmgsc  "$z64_guPerspectiveF_hook_addr"    "jal $gzsym_guPerspectiveF_hook; sw \$a2, 0x0038(\$sp);"
asmgsc  "$z64_guPerspective_camo_addr"     "nop; nop;"
asmgsc  "$z64_disp_swap_1_addr"            "jal $gzsym_disp_hook;"
asmgsc  "$z64_disp_swap_2_addr"            "jal $gzsym_disp_hook;"
asmgsc  "$z64_disp_swap_3_addr"            "jal $gzsym_disp_hook;"
asmgsc  "$z64_disp_swap_4_addr"            "jal $gzsym_disp_hook;"
